version: "3.8"

services:
  backend:
    build: ./backend
    container_name: student_management_backend
    restart: always
    env_file: .env
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - sm-network

  frontend:
    build:
      context: ./frontend
      target: ${DOCKER_TARGET:-development} # Now uses explicit stage names
    container_name: student_management_frontend
    restart: always
    ports:
      - "${FRONTEND_PORT:-3000}:${CONTAINER_PORT:-3000}" # 3000 for dev, 80 for prod
    environment:
      # - CHOKIDAR_USEPOLLING=true
      # - CHOKIDAR_INTERVAL=1000
      - REACT_APP_API_URL=${REACT_APP_API_URL}
    volumes:
      - ./frontend:/app # Only for development
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - sm-network

  db:
    image: mysql:8
    container_name: student_management_db
    restart: always
    environment:
      MYSQL_DATABASE: student_management_db
      # MYSQL_USER: ${DATABASE_USER}
      MYSQL_ROOT_PASSWORD: ""
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes" # (Not recommended for production)
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - sm-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

volumes:
  mysql_data:

networks:
  sm-network:
    driver: bridge
